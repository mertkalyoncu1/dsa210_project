# -*- coding: utf-8 -*-
"""mkdec15analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1E-9vccc5Q5AFIAVLjJ0W0iqnU1kHTdc7
"""

!pip install pandas matplotlib seaborn

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load the dataset
file_path = '/content/cleaned_watch_history_mk.csv'  # Update with the correct path if needed
df = pd.read_csv(file_path)

# Display the first few rows and summary
print(df.head())
print(df.info())

# Convert the timestamp to datetime if not already done
df['Timestamp'] = pd.to_datetime(df['Timestamp'])

# Extract hour and day of the week for analysis
df['Hour'] = df['Timestamp'].dt.hour
df['Weekday'] = df['Timestamp'].dt.day_name()

# Count the number of videos watched per hour
hourly_counts = df['Hour'].value_counts().sort_index()

# Plot the distribution
plt.figure(figsize=(10, 6))
sns.barplot(x=hourly_counts.index, y=hourly_counts.values, palette='viridis')
plt.title('Videos Watched by Hour')
plt.xlabel('Hour of Day')
plt.ylabel('Number of Videos Watched')
plt.xticks(range(0, 24))
plt.show()

# Categorize days as Weekday or Weekend
df['is_weekend'] = df['Weekday'].isin(['Saturday', 'Sunday'])

# Aggregate by hour and is_weekend
weekday_vs_weekend = df.groupby(['Hour', 'is_weekend']).size().unstack()

# Plot the results
weekday_vs_weekend.plot(kind='bar', stacked=True, figsize=(12, 6), colormap='coolwarm')
plt.title('Viewing Patterns: Weekday vs. Weekend')
plt.xlabel('Hour of Day')
plt.ylabel('Number of Videos Watched')
plt.legend(['Weekday', 'Weekend'])
plt.show()

# Correlate viewing times with periods (morning, afternoon, evening, night)
def categorize_time(hour):
    if 5 <= hour < 12:
        return 'Morning'
    elif 12 <= hour < 17:
        return 'Afternoon'
    elif 17 <= hour < 21:
        return 'Evening'
    else:
        return 'Night'

df['time_period'] = df['Hour'].apply(categorize_time)
time_period_counts = df['time_period'].value_counts()

# Plot the results
time_period_counts.plot(kind='pie', autopct='%1.1f%%', figsize=(8, 8), startangle=90)
plt.title('Viewing Activity by Time Period')
plt.ylabel('')
plt.show()
